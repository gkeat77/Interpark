<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.kosmo.jobkorea.book.dao.bookAdminDao">

	<!-- 도서상품 등록 -->
	<insert id="BookRegister">
		INSERT INTO BOOK_GOODS(
		itemId,isbn,title,description
		,translator,author
		,priceStandard,coverSmallUrl,coverLargeUrl
		,categoryId,categoryName
		,publisher,pubDate
		,`index`,authorInfo
		,stock,saleRate,salePrice,realPrice,
		mileageRate,mileage,regDate,serviceType
		,file_nm,file_loc,file_size
		,sellState,display
		<if test="!(sellStart.equals('')) and !(sellEnd.equals(''))">
			,sellStart,sellEnd
		</if>
		) VALUES (
		#{itemId},#{isbn},#{title},#{description},
		#{translator},#{author},
		#{priceStandard},#{coverSmallUrl},#{coverLargeUrl},
		#{categoryId},
		(SELECT categoryName as categoryName FROM CATEGORY where categoryId=#{categoryId}),
		#{publisher},#{pubDate},
		#{index},#{authorInfo},
		#{stock},#{saleRate},#{salePrice},#{realPrice},
		#{mileageRate},#{mileage},now(),#{serviceType},
		#{file_nm},#{file_loc},#{file_size}
		,#{sellState},#{display}
		<if test="!(sellStart.equals('')) and !(sellEnd.equals(''))">
			,#{sellStart},#{sellEnd}
		</if>
		)
	</insert>
	<!--카테고리 리스트 -->
	<select id="cateList" resultType="kr.kosmo.jobkorea.book.model.CategoryModel">
		SELECT * FROM CATEGORY
	</select>

<!-- 상품 검색 sql -->
	<sql id="search">
		<where>
		<if test="(classify != null) and (classify eq 'sell'.toString())">
			sellState='Y'	
		</if>
		<if test="(classify != null) and (classify eq 'nosell'.toString())">
			sellState='N'	
		</if>
		<if test="(classify != null) and (classify eq 'display'.toString())">
			display='Y'	
		</if>
		<if test="(classify != null) and (classify eq 'nodisplay'.toString())">
			display='N'	
		</if>
		<if test="(classify != null) and (classify eq 'noStock'.toString())">
			<![CDATA[ stock <= 0 ]]>
		</if>
		<if test="(searchKey != null) and (!searchKey.equals(''))">
		<if test="(classify != null) and (!classify.equals(''))">
		and
		</if>
			<choose>
				<when test="(searchType != null) and (searchType eq 'all'.toString())">
					(
					P_ID = #{searchKey } or
					title Like CONCAT('%', #{searchKey }, '%') 
					)
				</when>
				<when test="(searchType != null) and (searchType eq 'title'.toString())">
					title Like CONCAT('%', #{searchKey }, '%') 
				</when>
				<when test="(searchType != null) and (searchType eq 'P_ID'.toString())">
					P_ID = #{searchKey }
				</when>
			</choose>	
		</if>
		</where>
	</sql>

	<!-- 상품 리스트 -->
	<select id="goodsList" resultType="kr.kosmo.jobkorea.book.model.BookModel">
		SELECT P_ID as pId,itemId,title, description, translator,
		author,coverSmallUrl, categoryId, categoryName,
		publisher, sellCount, stock, 
		saleRate, salePrice,realPrice, 
		DATE_FORMAT(regDate, '%Y-%m-%d') as regDate,regDate as regTime ,sellState,
		display,
		DATE_FORMAT(sellStart, '%Y.%m.%d') as sellStart, DATE_FORMAT(sellEnd, '%Y.%m.%d') as sellEnd
		FROM BOOK_GOODS
		<include refid="search"/>
		<if test="(sort != null) and (!sort.equals(''))">
			order by ${sort}
		</if>
		<if test="(pageIndex != null) and (!pageIndex.equals('')) and (pageSize != null) and (!pageSize.equals(''))">
			LIMIT #{pageIndex}, #{pageSize}
		</if>
	</select>
	
	<!-- 상품 갯수 -->
	<select id="goodsCount" resultType="Integer">
		SELECT count(P_ID) FROM BOOK_GOODS
		<include refid="search"/>
	</select>
	
	<!-- 상품 상세보기  -->
	
	<select id="goodsDetail" resultType="kr.kosmo.jobkorea.book.model.BookModel">
		select  P_ID as pId, itemId, isbn, title, description, translator, author, priceStandard, 
		coverSmallUrl, coverLargeUrl, categoryId, categoryName, publisher, pubDate, 
		`index`, authorInfo, sellCount, stock, saleRate, salePrice, realPrice, regDate, 
		sellState, display,file_nm, file_loc, file_size ,mileage,mileageRate,serviceType,
		DATE_FORMAT(sellStart, '%Y-%m-%d') as sellStart,DATE_FORMAT(sellEnd, '%Y-%m-%d') as sellEnd 
		from BOOK_GOODS 
		where P_ID=#{pId}
	</select>


	<!--상품 정보 수정 -->
	
	<update id="updateGoodsInfo">
		update BOOK_GOODS
		set
		title=#{title},categoryName=#{categoryName},categoryId=#{categoryId},  
		salePrice=#{salePrice},saleRate=#{saleRate},realPrice=#{realPrice},
		sellState=#{sellState},display=#{display},stock=#{stock},
		`index`=#{index},authorInfo=#{authorInfo},description=#{description},
		serviceType=#{serviceType},mileageRate=#{mileageRate},mileage=#{mileageRate} 
		<if test="!(sellStart.equals('')) and !(sellEnd.equals(''))">
			,sellStart=#{sellStart},sellEnd=#{sellEnd}
		</if>
		where P_ID=#{pId}		
	</update>
	
	<!-- 파일 삭제할 목록 가져오기-->
	<select id="deleteList" resultType="kr.kosmo.jobkorea.book.model.BookModel">
		select  P_ID as pId,itemId,file_nm,file_loc,file_size
		from BOOK_GOODS
		where P_ID=#{pId}
	</select>
	
	<update id="deleteFileInfo">
		UPDATE BOOK_GOODS
		    SET  file_nm=DEFAULT
     			,file_loc=DEFAULT
		        ,file_size=DEFAULT
		where P_ID=#{pId}
	</update>
	
	<update id="updateFileInfo">
		UPDATE BOOK_GOODS SET
					 file_nm = #{file_nm}
					,file_loc = #{file_loc}
					,file_size = #{file_size}
		where P_ID=#{pId}
	</update>


	<delete id="deleteGoods">
		delete from BOOK_GOODS
		where P_ID=#{pId}
	</delete>


</mapper>