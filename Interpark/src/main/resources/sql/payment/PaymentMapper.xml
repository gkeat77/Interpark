<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.kosmo.jobkorea.payment.dao.PaymentDao">


<select id="getCartList" resultType="kr.kosmo.jobkorea.payment.model.PaymentModel" parameterType="String">
	SELECT 
	CART_NO AS cartNo
	, BOOK_NAME AS bookName
	, CART_STOCK AS stock
	, CART_PRICE AS price
	, CART_IMG AS bookImg
	, MILEAGE AS mileage
	, P_ID AS pId
	FROM CART
	WHERE 
	ORDER_YN NOT IN ('Y','C')
	AND loginID = #{loginID}
</select>


<update id="cartUpdate" parameterType="kr.kosmo.jobkorea.payment.model.PaymentModel">
UPDATE CART
SET CART_STOCK = #{stock}
WHERE CART_NO = #{cartNo}
</update>

<select id="payCartList" parameterType="hashmap" resultType="kr.kosmo.jobkorea.payment.model.PaymentModel">
SELECT
    BOOK_NAME AS bookName
    , CART_NO AS cartNo
    , CART_PRICE AS price
    , CART_STOCK AS stock
    , CART_IMG  AS bookImg
    , MILEAGE AS mileage
FROM CART 
<if test="cartNos!=null">
				WHERE  
				<foreach collection="cartNos" item="arr" separator="or">
					CART_NO IN ( #{arr} )
				</foreach>
				AND ORDER_YN != 'Y'
				AND loginID = #{loginID}	
</if>
</select>


<insert id="payment" parameterType="kr.kosmo.jobkorea.payment.model.PaymentModel">
INSERT INTO ORDERS
(
	ORDER_NO
	, PAYMENT
	, ORDER_DT
	, CART_NO
	, ORDER_STATE
	, loginID
	, DC_PRICE
	, COUPON_NO
	, EARNED_MILEAGE
	, USE_MILEAGE
	, ORDER_ADDRESS
)
VALUES
(
	#{payNo}
	, #{totalPrice}
	, now()
	, #{cartNos}
	, '0'
	, #{loginID}
	, #{couponPrice}
	, #{couponNos}
	, #{earnedMileage}
	, #{mileage}
	, #{userAddress1}		
)
</insert>


<update id="cartUpdate2" parameterType="kr.kosmo.jobkorea.payment.model.PaymentModel" >


UPDATE CART
SET ORDER_YN = 'Y'
WHERE
CART_NO =  #{cartNo} 
</update>


<insert id="regOderHst"  parameterType="kr.kosmo.jobkorea.payment.model.PaymentModel">
INSERT INTO ORDER_HST
(
	ORDER_NO
	, ORDER_DT
	, ORDER_STATE
)
VALUES
(
	#{payNo}
	, NOW()
	, #{userState}
)

</insert>


<select id="countUser" resultType="int">
	SELECT COUNT(*) FROM tb_userinfo
</select>



<select id="pagingUser" resultType="hashmap" parameterType="hashmap">
    <![CDATA[
        SELECT loginID 
			FROM tb_userinfo			
			ORDER BY M_REGDATE DESC
        LIMIT #{pageStart}, #{perPageNum}
    ]]>
</select>



<select id="goSearch" resultType="hashmap" parameterType="hashmap">
    <![CDATA[
        SELECT loginID 
			FROM tb_userinfo
			WHERE 	loginID LIKE CONCAT('%',#{searchKey},'%')		
			ORDER BY M_REGDATE DESC
    ]]>
</select>


<select id="userDetail" resultType="kr.kosmo.jobkorea.payment.model.PaymentModel">
	SELECT ORDER_STATE AS userState
					, ORDER_NO AS payNo
					, PAYMENT AS price
					, CART_NO AS cartNos
	FROM ORDERS
	WHERE loginID = #{loginID}
	ORDER BY ORDER_DT DESC
</select>

<delete id="cartDel">
	DELETE FROM CART
	WHERE CART_NO = #{cartNo}
</delete>



<update id="goDelivery">
		UPDATE ORDERS
		SET ORDER_STATE = '1'
				, ORDER_DT = NOW()
		WHERE ORDER_NO = #{payNo}
</update>

<insert id="goDeliveryHst">
	INSERT INTO ORDER_HST
	(ORDER_NO, ORDER_DT, ORDER_STATE)
	VALUES
	(#{payNo},NOW(),'1')
</insert>

<select id="getRegDt" resultType="kr.kosmo.jobkorea.payment.model.PaymentModel">
	SELECT DATE_FORMAT(ORDER_DT, '%Y-%m-%d-%h:%i') AS regDt
				, ORDER_NO AS payNo
	FROM ORDERS
	WHERE ORDER_STATE = 1
</select>

<update id="completeDelivery">
	UPDATE ORDERS
	SET ORDER_STATE = '2'
	WHERE ORDER_NO = #{payNo}
</update>

<select id="orderShow" resultType="kr.kosmo.jobkorea.payment.model.PaymentModel">
	SELECT CART_NO AS cartNos
			, loginID AS loginID
			, ORDER_DT AS regDt
			, PAYMENT AS price
			, USE_MILEAGE AS useMileage
			, EARNED_MILEAGE AS earnedMileage
			, COUPON_NO AS couponNo
			, ORDER_NO AS payNo 
	FROM ORDERS
	WHERE ORDER_NO = #{payNo}
</select>

<select id="orderCarts" parameterType="hashmap" resultType="kr.kosmo.jobkorea.payment.model.PaymentModel">
SELECT
    BOOK_NAME AS bookName
    , CART_NO AS cartNo
    , CART_PRICE AS price
    , CART_STOCK AS stock
    , CART_IMG  AS bookImg
    , loginID
FROM CART 
<if test="cartNos!=null">
				WHERE  
				<foreach collection="cartNos" item="arr" separator="or">
					CART_NO IN ( #{arr} )
				</foreach>
				AND ORDER_YN IN ('C','Y')	
</if>
</select>


<update id="goCancel">
	UPDATE ORDERS
	SET ORDER_STATE = '3'
	WHERE ORDER_NO = #{payNo}
</update>

<select id="getCoupon" resultType="kr.kosmo.jobkorea.payment.model.PaymentModel">
SELECT A.COUPON_NAME as couponName
		, B.COUPON_HST_NO as couponNo		
FROM COUPON A
JOIN  COUPON_HST B ON A.COUPON_NO = B.COUPON_NO
WHERE B.loginID = #{loginID}
AND DATE(B.COUPON_USE_DT) = '0000-00-00 00:00:00'
</select>



<select id="getCouponOne" resultType="kr.kosmo.jobkorea.payment.model.PaymentModel">
SELECT ifnull(A.DC_RATE,0) as couponRate
		, ifnull(A.DC_PRICE,0) as couponPrice
FROM COUPON A
JOIN  COUPON_HST B ON A.COUPON_NO = B.COUPON_NO
WHERE B.COUPON_HST_NO = #{couponNo}
AND DATE(B.COUPON_USE_DT) = '0000-00-00 00:00:00' 
</select>


<update id="useCoupon">
UPDATE COUPON_HST
SET COUPON_USE_DT = NOW()
WHERE COUPON_HST_NO = #{couponNo}
		
</update>


<select id="detailCoupon" resultType="kr.kosmo.jobkorea.payment.model.PaymentModel">
SELECT COUPON_HST_NO AS couponNo
FROM COUPON_HST
WHERE COUPON_USE_DT = #{regDt}
  AND loginID = #{loginID}
</select>

<update id="couponCancel">
UPDATE COUPON_HST
SET COUPON_USE_DT = '0000-00-00 00:00:00'
WHERE COUPON_HST_NO = #{couponNo}
</update>



<update id="cartUpdate3">
UPDATE CART
SET ORDER_YN = 'N'
WHERE
CART_NO =  #{cartNo} 
</update>

<select id="defaultChart" parameterType="String" resultType="kr.kosmo.jobkorea.payment.model.PaymentModel">
	SELECT IFNULL(SUM(PAYMENT), 0) AS totalPrice FROM ORDERS
	WHERE DATE(ORDER_DT)= #{param1}
</select>


<update id="mileageDeduction" parameterType="kr.kosmo.jobkorea.payment.model.PaymentModel">
	UPDATE tb_userinfo
	SET M_MILEAGE = #{mileage}
	WHERE loginID = #{loginID}
</update>


<select id="userInfo" parameterType="String" resultType="kr.kosmo.jobkorea.login.model.RegisterInfoModel">
	SELECT NAME AS name
			, M_EMAIL AS mail
			, M_PHONE1 AS phone1
			, M_PHONE2 AS phone2
			, M_PHONE3 AS phone3
			, M_MILEAGE AS mileage
			, CONCAT('(기 본 배 송 지 ) ',A_TITLE) AS addressTitle
			, A_AD1 AS address1
			, A_AD2 AS address2
			, A_AD3 AS address3
			, loginID AS loginID
	FROM tb_userinfo
	WHERE loginID = #{loginID}
</select>

<select id="buyList" parameterType="String" resultType="kr.kosmo.jobkorea.payment.model.PaymentModel">
	SELECT ORDER_DT AS regDt	
		, ORDER_NO AS payNo
		, (
            CASE ORDER_STATE
			WHEN 0 THEN '입금대기중'
			WHEN 1 THEN '결제완료'
			WHEN 2 THEN '배송완료'
			WHEN 3 THEN '관리자 결재취소'
			WHEN 5 THEN '결재취소'
			END
            ) AS state
	FROM ORDER_HST
	WHERE ORDER_NO IN (
	        SELECT ORDER_NO
	        FROM ORDERS
	        WHERE loginID = #{loginID}
	    )
	 ORDER BY ORDER_DT DESC
</select>

<select id="userOrders" resultType="kr.kosmo.jobkorea.payment.model.PaymentModel">
		SELECT ORDER_DT AS regDt	
		, ORDER_NO AS payNo
		, (
            CASE ORDER_STATE
			WHEN 0 THEN '입금대기중'
			WHEN 1 THEN '결제완료'
			WHEN 2 THEN '배송완료'
			WHEN 3 THEN '관리자 결재취소'
			WHEN 5 THEN '결재취소'
			END
            ) AS state
	FROM ORDERS 
	WHERE loginID = #{loginID}
	  AND ORDER_STATE IN (0,1)
	 ORDER BY ORDER_DT DESC
</select>


<update id="mileageSet" parameterType="kr.kosmo.jobkorea.payment.model.PaymentModel">
	UPDATE tb_userinfo
	SET M_MILEAGE = #{balanceMileage}
	WHERE loginID = #{loginID}
</update>

<update id="userCancelCart" parameterType="hashmap" >
	
	UPDATE CART
	SET ORDER_YN = 'C'
	WHERE
	CART_NO IN (
	<foreach collection="cartNos" item="arr" separator=","> 
	 #{arr} 
	</foreach>
	)
</update>

<update id="userCancelState" parameterType="kr.kosmo.jobkorea.payment.model.PaymentModel">
	UPDATE ORDERS
	SET ORDER_STATE = '5'
	WHERE ORDER_NO = #{payNo}
</update>

<select id="addressCheck" resultType="String">
	SELECT IFNULL(MAX(A.A_TITLE),'X') AS TITLE
	FROM tb_userinfo A 
	RIGHT OUTER JOIN ADDRESS B
	ON A.loginID = B.loginID
	WHERE A.loginID = #{loginID}
</select>




<select id="userAddressS" resultType="kr.kosmo.jobkorea.login.model.RegisterInfoModel">
	
	SELECT *
	FROM (
	SELECT t2.* FROM 
	(
	    SELECT * FROM 
	    (
	        SELECT A_TITLE AS addressTitle
			, A_AD1 AS address1
			, A_AD2 AS address2
			, A_AD3 AS address3
			, A_VAL  
			FROM `tb_userinfo` WHERE loginID = #{loginID}
	    )
	    AS t22
	    GROUP BY t22.addressTitle
	    ORDER BY t22.A_VAL DESC
	) AS t2
	
	UNION
	
	SELECT t1.* FROM 
	(
	    SELECT * FROM
	    (
	        SELECT A_TITLE AS addressTitle
			, A_AD1 AS address1
			, A_AD2 AS address2
			, A_AD3 AS address3
			, A_VAL  
			FROM `ADDRESS` WHERE loginID = #{loginID}
	    )
	    AS t11
	    GROUP BY t11.addressTitle
	    ORDER BY t11.A_VAL
	) AS t1
	) ADAD
	ORDER BY A_VAL DESC
</select>


<insert id="addAddress" parameterType="hashmap">
	INSERT INTO ADDRESS
	(
		A_TITLE, A_AD1, A_AD2, A_AD3, loginID
	)
	VALUES
	(
		#{title},#{detailadr},#{address},#{address2}, #{loginID}
	)
	
</insert>



<delete id="delAddress" parameterType="hashmap">
	DELETE FROM ADDRESS
	WHERE loginID = #{loginID}
	AND A_TITLE = #{title}
	AND A_AD3 = #{detail}
</delete>


<select id="addressTableCheck" parameterType="hashmap" resultType="String">
	SELECT IFNULL(MAX(A_VAL),'X') FROM ADDRESS
	WHERE loginID = #{loginID}
	AND A_TITLE = #{title}
	AND A_AD3 = #{detail}
</select>

<select id="maxVal" parameterType="hashmap" resultType="int">
	SELECT MAX(A_VAL)
	FROM (
	SELECT t2.* FROM 
	(
	    SELECT * FROM 
	    (
	        SELECT A_TITLE AS addressTitle
			, A_AD1 AS address1
			, A_AD2 AS address2
			, A_AD3 AS address3
			, A_VAL  
			FROM `tb_userinfo` WHERE loginID = #{loginID}
	    )
	    AS t22
	    GROUP BY t22.addressTitle
	    ORDER BY t22.A_VAL DESC
	) AS t2
	
	UNION
	
	SELECT t1.* FROM 
	(
	    SELECT * FROM
	    (
	        SELECT A_TITLE AS addressTitle
			, A_AD1 AS address1
			, A_AD2 AS address2
			, A_AD3 AS address3
			, A_VAL  
			FROM `ADDRESS` WHERE loginID = #{loginID}
	    )
	    AS t11
	    GROUP BY t11.addressTitle
	    ORDER BY t11.A_VAL
	) AS t1
	) ADAD
	ORDER BY A_VAL DESC
</select>


<update id="setUserTable" parameterType="hashmap">
	UPDATE tb_userinfo
	SET A_VAL = #{maxNum}
	WHERE loginID = #{loginID}
	AND A_TITLE = #{title}
	AND A_AD3 = #{detail}
</update>

<update id="setAddressTable" parameterType="hashmap">
	UPDATE ADDRESS
	SET A_VAL = #{maxNum}
	WHERE loginID = #{loginID}
	AND A_TITLE = #{title}
	AND A_AD3 = #{detail}

</update>

<update id="bookStockUpdate" parameterType="kr.kosmo.jobkorea.payment.model.PaymentModel">
	UPDATE
		BOOK_GOODS A, (SELECT stock FROM BOOK_GOODS WHERE P_ID= #{pId}) B
	SET A.sellCount = IFNULL(A.sellcount,0)+ #{stock}
		, A.stock = B.stock - #{stock}
	WHERE A.P_ID = #{pId}	
</update>



<select id="maxVal2" parameterType="kr.kosmo.jobkorea.login.model.RegisterInfoModel" resultType="int">
	SELECT MAX(A_VAL)
	FROM (
	SELECT t2.* FROM 
	(
	    SELECT * FROM 
	    (
	        SELECT A_TITLE AS addressTitle
			, A_AD1 AS address1
			, A_AD2 AS address2
			, A_AD3 AS address3
			, A_VAL  
			FROM `tb_userinfo` WHERE loginID = #{loginID}
	    )
	    AS t22
	    GROUP BY t22.addressTitle
	    ORDER BY t22.A_VAL DESC
	) AS t2
	
	UNION
	
	SELECT t1.* FROM 
	(
	    SELECT * FROM
	    (
	        SELECT A_TITLE AS addressTitle
			, A_AD1 AS address1
			, A_AD2 AS address2
			, A_AD3 AS address3
			, A_VAL  
			FROM `ADDRESS` WHERE loginID = #{loginID}
	    )
	    AS t11
	    GROUP BY t11.addressTitle
	    ORDER BY t11.A_VAL
	) AS t1
	) ADAD
	ORDER BY A_VAL DESC
</select>


<select id="userMaxAddress" parameterType="kr.kosmo.jobkorea.login.model.RegisterInfoModel" resultType="kr.kosmo.jobkorea.login.model.RegisterInfoModel">

SELECT *
	FROM (
	SELECT t2.* FROM 
	(
	    SELECT * FROM 
	    (
	        SELECT A_TITLE AS addressTitle
			, A_AD1 AS address1
			, A_AD2 AS address2
			, A_AD3 AS address3
			, A_VAL  
			FROM `tb_userinfo` WHERE loginID = #{loginID}
	    )
	    AS t22
	    GROUP BY t22.addressTitle
	    ORDER BY t22.A_VAL DESC
	) AS t2
	
	UNION
	
	SELECT t1.* FROM 
	(
	    SELECT * FROM
	    (
	        SELECT A_TITLE AS addressTitle
			, A_AD1 AS address1
			, A_AD2 AS address2
			, A_AD3 AS address3
			, A_VAL  
			FROM `ADDRESS` WHERE loginID = #{loginID}
	    )
	    AS t11
	    GROUP BY t11.addressTitle
	    ORDER BY t11.A_VAL
	) AS t1
	) ADAD
	WHERE A_VAL = #{val}
	ORDER BY A_VAL DESC
	
</select>


<select id="adminOrders" resultType="kr.kosmo.jobkorea.payment.model.PaymentModel">

	SELECT ORDER_DT AS regDt	
			, ORDER_NO AS payNo
			, (
	            CASE ORDER_STATE
				WHEN 0 THEN '입금대기중'
				WHEN 1 THEN '결제완료'
				WHEN 2 THEN '배송완료'
				WHEN 3 THEN '관리자 결재취소'
				WHEN 5 THEN '결재취소'
				END
	            ) AS state
		FROM ORDER_HST
		WHERE ORDER_NO IN (
		        SELECT ORDER_NO
		        FROM ORDERS
		    )
		 ORDER BY ORDER_DT DESC

</select>


<select id="countOrders" resultType="int">
	SELECT COUNT(*)
		FROM ORDER_HST
		WHERE ORDER_NO IN (
		        SELECT ORDER_NO
		        FROM ORDERS
		    )
</select>

<select id="adminOrdersPaging" resultType="hashmap" parameterType="hashmap">
    <![CDATA[
        SELECT ORDER_DT AS regDt	
			, ORDER_NO AS payNo
			, (
	            CASE ORDER_STATE
				WHEN 0 THEN '입금대기중'
				WHEN 1 THEN '결제완료'
				WHEN 2 THEN '배송완료'
				WHEN 3 THEN '관리자 결재취소'
				WHEN 5 THEN '결재취소'
				END
	            ) AS state
		FROM ORDER_HST
		WHERE ORDER_NO IN (
		        SELECT ORDER_NO
		        FROM ORDERS
		    )
		 ORDER BY ORDER_DT DESC
        LIMIT #{pageStart}, #{perPageNum}
    ]]>
</select>
	 
<select id="showCoupon" resultType="kr.kosmo.jobkorea.payment.model.PaymentModel">
	SELECT COUPON_NO AS couponNo
	, COUPON_NAME AS couponName
	, IFNULL(DC_RATE,0) AS couponRate
	, IFNULL(DC_PRICE,0) AS couponPrice
	FROM COUPON
</select>



<select id="couponCheck" parameterType="hashmap" resultType="String">
	SELECT IFNULL(MAX(COUPON_HST_NO),'X')
	FROM COUPON_HST
	WHERE loginID = #{loginID}
	AND COUPON_NO = #{couponNo}
	AND DATE(COUPON_USE_DT) = '0000-00-00 00:00:00'
</select>


<insert id="insertCoupon" parameterType="hashmap">
	INSERT INTO COUPON_HST
	( COUPON_NO, COUPON_REG_DT, loginID)
	VALUES
	(#{couponNo}, NOW(), #{loginID})
</insert>

<update id="modifyAddress" parameterType="hashmap">
	UPDATE tb_userinfo
	SET A_TITLE = #{title}
	, A_AD1 = #{detailadr}
	, A_AD2 = #{address}
	, A_AD3 = #{address2} 
	WHERE loginID = #{loginID}  

</update>

<select id="getAddress" parameterType="hashmap" resultType="kr.kosmo.jobkorea.login.model.RegisterInfoModel">
	SELECT A_TITLE AS addressTitle
			, A_AD1 AS address1
			, A_AD2 AS address2
			, A_AD3 AS address3
	FROM tb_userinfo
	WHERE loginID = #{loginID}   			
</select>
	 
</mapper>
